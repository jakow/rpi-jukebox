$raspberry-color: #BC1142;
@import "settings";
body {
  background-color: $dark-color;
}

#logo {
  font-family: 'Lobster';
  font-size: 3em;
  color: white;
  padding: 0em 0em;
  font-weight: normal;
}

#logo-mobile {
  font-family: 'Lobster';
  font-size: 2.5em;
  color: white;
  padding: 0em 0em;
  font-weight: normal;

}

.rounded-right-button {
  // Extend the base selector to get core styles
  @extend %button;
  // Use the size mixin to set a size
  @include button-size(
    $size: medium, // tiny, small, medium, or large
    $expand: false
  );
  // Use the style mixin to set visual styles
  @include button-style(
    $background: $raspberry-color, // Background color
    $background-hover: auto, // Background color on hover. Use "auto" to generate automatically
    $color: #000, // Text color
    $style: solid // Can be solid or hollow

  );
}

.song-search {
  margin: 0.5em !important;
}

#mobile-search {
  margin-left: auto;
  margin-right: auto;
  margin-top: 0.25em;;
  margin-bottom: 0.25em;
  width: 80%;
}

#title-bar-desktop {
  border-bottom: 0px;
}

#title-bar-mobile {
  border-bottom: 1px solid $dark-color;
  padding: 0px;
}

.title-bar-button {
  margin: 0px;
  border-radius: 0px;
}

#playback-desktop {
  background-color: $primary-color;
  height: 64px;
}

.seekbar, .volume-slider {
  display: inline-block;
  width: 100%;
}

.noui-center {
  margin-top: auto;
  margin-bottom: auto;
  padding-top: 10px;
  padding-bottom: 10px;
}

.auto-center {
  margin-top: auto;
  margin-bottom: auto;
}

#menu-desktop {
  background-color: $dark-color;
}

#main-view {
  background-color: $gray;
}

#queue-container-desktop {
  width: 25em;
  background-color: white;
  border-left: 1px solid $gray-dark;
}

#playback-control {
  width: 25em;
}

.playback-button {
  // Extend the base selector to get core styles
  @extend %button;
  margin: 0px;
  color: $gray;
  &:hover, &:focus {
    color: $gray-light;
  }
}

.button-mute {
  position: relative;
  left: 1em;
}

.music-symbol {
  width: 5em;
  height: 5em;
  background-color: darken($dark-color, 5);
  border-radius: 0;
  line-height: 80px;
  text-align: center;
  vertical-align: middle;
  display: inline-block;
  color: $gray;
}

.now-playing {
  background: $dark-color;
  color: $gray-light;
}

.song-info {
  white-space: nowrap;
  overflow: hidden;
  width: 18em;
  margin: 0 1em;
}

.song-title {
  margin-top: 8px;
  margin-bottom: 4px;
  overflow: hidden;
  font-size: 1.25em;
  color: $gray;
}

.song-author {
  margin-bottom: 8px;
  margin-top: 4px;
  font-size: 1em;
  font-style: italic;
  color: $gray-dark;
}

.fa-center {
  line-height: inherit;
}

.marquee > * {
  /* Starting position */
  -webkit-transform: translateX(30%);
  transform: translateX(30%);
  /* Apply animation to this element */
  -webkit-animation: horizontally 8s linear infinite alternate;
  animation: horizontally 8s linear infinite alternate;
}

/* Move it (define the animation) */

@-webkit-keyframes horizontally {
  0% {
    -webkit-transform: translateX(30%);
  }
  100% {
    -webkit-transform: translateX(-70%);
  }
}

@keyframes horizontally {
  0% {
    /* Browser bug fix */
    -webkit-transform: translateX(30%);
    /* Browser bug fix */
    transform: translateX(30%);
  }
  100% {
    /* Browser bug fix */
    -webkit-transform: translateX(-70%);
    /* Browser bug fix */
    transform: translateX(-70%);
  }
}

.queue {
  ol, ul {
    margin: 0;
    padding: 0;
  }
}

$thumbnail-width: 6em;
.queue-item {
  @include grid-block(
    $size: expand, // Can be expand, shrink, or a number of columns
    $orientation: horizontal, // Set to vertical for a vertical grid
    $wrap: false, // Set to true to make columns wrap if they get too wide
    $align: left, // Can be left, right, center, justify, or spaced
    $order: 0 // Can be any positive number
  );
  padding: 0.5em;
  border-bottom: 1px solid $gray;
  height: 4.5em;
  .queue-optn {
    visibility: hidden;
  }
}

.queue-item:hover {
  background-color: $gray-light;
  .queue-optn {
    visibility: visible;
  }
}

.queue-thumb {
  width: $thumbnail-width;
  overflow: hidden;
  height: $thumbnail-width * 1080/1920;
  margin: 0 auto;
  img {
    margin: 0;
    padding: 0;
    width: $thumbnail-width;
    //height: $thumbnail-width*0.75; //hack for 4:3 imgs
    //position: relative;
    //top: 0.5*($thumbnail-width * (1080/1920)- $thumbnail-width * 0.75);

  }
}

.queue-desc {
  font-family: $header-font-family;
  div {
    display: block;
    //margin: 0em 1em;
    overflow-x: hidden;
    white-space: nowrap;
  }
  h6 {
    margin: 0 0.25em;
  }
  //white-space: nowrap;
  //width: 25em - $thumbnail-width - 2em;
}

.queue-desc p {

  font-style: italic;
  margin: 0 0.25em;
  font-size: 0.8em;

}

.queue-optn {
  margin-top: auto;
  margin-bottom: auto;

}

.menu-list {
  // This gets you basic styles
  @include block-list-container(
    $font-size: 1rem, // Base font size for entire list
    $full-bleed: true // If true, negative margins are added on the left and right to push the list to the edge of the container
  );
  margin-top: 1em;
  marin-bottom: 1em;
  // This adds support for text fields, dropdowns, and radio/check inputs
  @include block-list-inputs(
    $color: #000, // Foreground color
    $background: $dark-color, // Background color
    $background-hover: lighten($dark-color, 4), // Background color of elements on hover
    $padding: 1rem //
  );
  // This adds support for icons
  &.with-icons {
    @include block-list-icons(
      $size: 0.8, // This should be a decimal point. 0.8 makes the icon 80% the size of its parent
      $item-selector: 'li' // This should be whatever tag or class your block list uses for items
    );
  }
  // Define what tag or class your list items are with this mixin
  li {
    @include block-list-item(
      $color: $gray, // Color of items
      $color-hover: $gray-light, // Color of items on hover
      $color-disabled: $gray-dark, // Color of items when disabled
      $background: transparent, // Background color
      $background-hover: lighten($dark-color, 4), // Background color on hover
      $border: none, // Top and bottom border of items
      $padding: 0.5em 1em 0.5em 1.5em
    );
    a {
      text-overflow: ellipsis;
      max-width: inherit;
    }

    &.menu-active {
      background-color: lighten($dark-color, 8);
      &::before {
        color: white;
        content: ' ';
        display: inline;
        position: absolute;
        left: 0;
        background-color: $raspberry-color;
        width: 3px;
        height: 2em;
      }
    }

    // Add styles for list items with chevrons
    &.with-chevron {
      @include block-list-chevron(
        $color: #000, // Color of chevron
        $padding: 1rem, // Insert the same padding as the block list item here
        $label-class: 'block-list-label' // Insert the class you're using for labels
      );
    }
  }
  // Define what tag or class your headers are with this mixin
  header {
    @include block-list-header(
      $color: $gray, // Text color
      $font-size: 1rem, // Font size
      $uppercase: true, // If true, the text becomes all-caps
      $offset: 1rem // Left-side offset for text
    );
    font-family: $header-font-family;
  }
  // Define the class for labels
  .block-list-label {
    @include block-list-label(
      $color: #999, // Color of label
      $left-class: 'left', // Define a modifier class for left-aligned labels
      $left-padding: 1rem // Padding to add when a label is left-aligned
    );
  }
}

.search-icon::before {
  font-family: FontAwesome;
  content: '\f002';
  padding-right: 0.5em;

}

.settings-icon::before {
  font-family: FontAwesome;
  content: '\f013';
  padding-right: 0.5em;

}

.note-icon::before {
  font-family: FontAwesome;
  content: '\f001';
  padding-right: 0.5em;
}
